version: "3.8"

# NOTE: Mapping is external then internal.
#       Example '8091:8080' maps external port 8091 to internal port 8080.
# NOTE: See https://docs.docker.com/compose/environment-variables/ for
#       information about environment variables

# use POSTGRES_PORT_EXPOSED environment variable then default to 5432
# ${POSTGRES_PORT_EXPOSED-5432}:${POSTGRES_PORT-5432}

# services:
#   env_file:
#     - .env.local rely on .env (default) OR pass as command line argument
#   depends_on: # services should be independent and runnable without relying on other services
#     root_db:
#       condition: service_healthy

# WARNING!!!: env_file: is ignored if we also use environment:

services:
  # see https://hasura.io/docs/latest/graphql/core/deployment/graphql-engine-flags/reference.html#server-flag-reference
  graphql.magicbell.local:
    container_name: magicbell-graphql
    image: magicbell-graphql
    build:
      context: ./graphql
    restart: always
    ports:
      - ${HASURA_PORT_EXPOSED-8080}:${HASURA_PORT-8080}
    environment:
      HASURA_GRAPHQL_METADATA_DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@host.docker.internal:5432/${POSTGRES_DB}"
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@host.docker.internal:5432/${POSTGRES_DB}"
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
